# 더블 루프를 사용하여 아래와 같이 출력하는 프로그램 작성
# 출력결과
# *
# **
# ***
# 1번째 방법(더블 루프)
for i in range(3):  # 3행을 만듦
    # 처음 루프에는 i가 0이기 때문에 1이 나오므로 별표 1개만 찍게 됨
    # 이후는 i값이 증가가 되기 때문에 2번째 루핑할 때는 별표를 2개를 찍게 됨
    for j in range(i+1):
        print("*", end="")
    print("")           # 줄바꿈 역할

# 2번째 방법(format() 함수 이용)
# format 함수는 {} 이용하고 숫자도 같이 이용됨
# 1:1 매핑이 되어 괄호 안에 들어감
# format 함수도 인덱스를 활용하여 해당하는 값들을 출력할 수 있음
print("가격 : {}, 물품 : {}, 무게(kg) : {}".format(1500, "필통", 0.5))
# 생략을 하면 자동으로 0,1,2가 들어감
print("나이 : {0}, 이름 : {1}, 키 : {2}".format(21, "양한이", 165.1))
print("정수값 : {2}, string : {1}, float : {0}".format(32, "김유진", 20.1))

# format() 는 공간확보 및 0으로 채우는 기능도 지원함
# 콜론(:)을 기준으로 우측에 > 혹은 < 부등호를 사용해서 방향을 지정해줄 수 있음

print("금액 '{:>10d}'".format(1500))   # 오른쪽(>)으로 밀어서 출력 = 오른쪽 정렬
print("금액 '{:<10d}'".format(3000))   # 왼쪽(<)으로 밀어서 출력 = 왼쪽 정렬
print("금액 '{:>010d}'".format(25000))  # 0을 추가하면 0으로 빈칸을 채워주는 기능도 지원함

for i in range(3):
    # 왼쪽 정렬
    print("{:<5}".format("*" * (i+1)))

# 더블 루프를 사용하여 아래와 같이 출력하는 프로그램을 작성
# 출력결과
# ********
# *****
# **

# 1번째 더블 루프 방법
print("------------------")
# 정지되는 값을 0으로 해주고 증감식을 -3로 줌
for i in range(8, 0, -3):
    for j in range(i):
        print("*", end="")
    print("")

# 2번째 format() 함수 방법
print("------------------")
# 끝 값이 포함되지 않으니까 11일때 빼야지 8가 나오니까
# 스타트값을 11으로 설정
for i in range(11, 0, -3):
    print("{:<8}".format("*" * (i-3)))